<dgraph.drop.op>: string .
<dgraph.graphql.p_query>: string @index(sha256) .
<dgraph.graphql.schema>: string .
<dgraph.graphql.xid>: string @index(exact) @upsert .
type <dgraph.graphql> {
	dgraph.graphql.schema
	dgraph.graphql.xid
}
type <dgraph.graphql.persisted_query> {
	dgraph.graphql.p_query
}

# Define Types

type User {
    email
    pw
    pw_reset
    user_displayname
	user_orcid	
    date_joined
    user_role
    user_affiliation
    invited_by
    account_status
    preference_emails
    follows
    follow_notification
}

type Entry {
    unique_name
    name
    other_names
    entry_added
    creation_date
    entry_edit_history
    entry_review_status
    entry_notes
    reviewed_by
    wikidataID
    description
}

type Source {
    related
    founded
    channel
    channel_url
    channel_comments
    website_allows_comments
    website_comments_registration_required
    channel_feeds
    channel_epaper
    transcript_kind
    payment_model
    contains_ads
    publication_kind
    special_interest
    topical_focus
    publication_cycle
    publication_cycle_weekday
    geographic_scope
    country
    geographic_scope_subunit
    geographic_scope_subunit_geo
    audience_size
    audience_residency
    languages
    verified_account
    party_affiliated
    defunct
}

type Channel {
    description
    form_name_question
    form_name_placeholder
    form_name_addon
    form_name_helptext
}

type Organization {
    founded
    is_person
    ownership_kind
    country
    address_string
    address_geo
    employees
    publishes
    owns
    party_affiliated   
}

type Country {
    country_code
    opted_scope
}


type Multinational {
}

type Subunit {
    country
    country_code
    location_point
}

type Archive {
    authors
    doi
    arxiv
    url
    published_date
    last_updated
    access
    sources_included
    fulltext
    text_units
}


type Dataset {
    authors
    doi
    arxiv
    url
    published_date
    last_updated
    access
    languages
    country
    start_date
    end_date
    file_format
    initial_source
    meta_vars
    concept_vars
    materials
    sources_included
}

type Corpus {
    authors
    doi
    arxiv
    url
    published_date
    last_updated
    access
    materials
    languages
    file_format
    sources_included
    start_date
    end_date
    initial_source
    meta_vars
    text_units
    country
    concept_vars
}


type Tool {
    authors
    doi
    arxiv
    url
    published_date
    last_updated
    platform
    programming_languages
    used_for
    graphical_user_interface
    channels
    language_independent
    languages
    author_validated
    validation_corpus
    input_file_format
    output_file_format
    materials
    user_access
    license
    defunct
    open_source
    cran
    pypi
    github
    concept_vars
}


type ResearchPaper {
    authors
    doi
    arxiv
    url
    published_date
    last_updated
    title
    isbn
    paper_kind
    journal
    sources_included
    tools_used
    datasets_used
    corpus_used
    country
    text_units
}


type Operation {}
type FileFormat {}
type MetaVar {}
type ConceptVar {}
type TextUnit {}

type Rejected {
    entry_review_status
    reviewed_by
    entry_added
    creation_date
    entry_edit_history
}

# Define Directives and index

# User Predicates   
display_name: string . 
email: string @index(hash) @upsert .
pw: password .
pw_reset: string .
date_joined: dateTime @index(day) .
user_displayname: string @index(term) .
user_orcid: string @index(hash) .
user_role: int .
user_affiliation: string @index(term) . 
invited_by: [uid] @reverse .
account_status: string @index(hash) .
preference_emails: bool @index(bool) .
follows: [uid] @reverse .
follow_notification: [uid] .

# Generic Predicates 
unique_name: string @index(hash, trigram) @upsert .
name: string @index(term, trigram) . 
other_names: [string] @index(term, trigram) .
entry_added: uid @reverse .
creation_date: dateTime @index(day) .
entry_edit_history: [uid] @reverse .
entry_review_status: string @index(hash) .
entry_notes: string .
reviewed_by: uid @reverse .
wikidataID: int @index(int) .


founded: dateTime @index(year) .
country: [uid] @reverse .
country_code: string @index(exact).
description: string @index(fulltext, trigram, term).
location_point: geo @index(geo) .

# Channel Predicates
form_name_question: string .
form_name_placeholder: string .
form_name_addon: string .
form_name_helptext: string .

# Source Predicates
related: [uid] @reverse .
channel: uid @reverse .
channel_comments: string .
website_allows_comments: string @index(hash) .
website_comments_registration_required: string @index(hash) .
channel_url: string .
channel_feeds: [string] .
channel_epaper: string .
transcript_kind: string @index(hash) .
payment_model: string @index(hash) .
contains_ads: string @index(hash) .
publication_kind: [string] @index(hash) .
special_interest: bool @index(bool) .
topical_focus: [string] .
publication_cycle: string @index(hash) .
publication_cycle_weekday: [int] .
geographic_scope: string @index(hash) .
geographic_scope_subunit: [uid] @reverse .
geographic_scope_subunit_geo: geo @index(geo) .
languages: [string] @index(hash) .
audience_size: [dateTime] .
audience_residency: [dateTime] .
verified_account: bool @index(bool) .
party_affiliated: string @index(hash) .
defunct: bool @index(bool) .

# Organization Predicates
is_person: bool .
ownership_kind: string @index(hash).
address_string: string .
address_geo: geo @index(geo) .
employees: string .
owns: [uid] @reverse .
publishes: [uid] @reverse .

# Country Predicates
opted_scope: bool .

# Resource Predicates
authors: [string] @index(term) .
published_date: dateTime @index(day) .
last_updated: dateTime @index(day) .
url: string @index(exact) .
doi: string @index(exact) .
arxiv: string @index(exact) .

# Shared Predicates (dataset, corpus, tool, archive)
sources_included: [uid] @reverse .
access: string @index(hash).
materials: [string] .
related_publications: [uid] @reverse .
file_format: [uid] @reverse .
start_date: dateTime @index(day) .
end_date: dateTime @index(day) .
initial_source: [uid] @reverse .
meta_vars: [uid] @reverse .
concept_vars: [uid] @reverse .
text_units: [uid] @reverse .

# Archive Predicates
fulltext: bool @index(bool).

# Tool Predicates
platform: [string] @index(hash) .
programming_languages: [string] @index(hash) .
graphical_user_interface: bool @index(bool) .
used_for: [uid] @reverse .
channels: [uid] @reverse .
language_independent: bool @index(bool) .
author_validated: string @index(hash) .
validation_corpus: [uid] @reverse .
input_file_format: [uid] @reverse .
output_file_format: [uid] @reverse .
input_data: [uid] @reverse .
output_data: [uid] @reverse .
user_access: string @index(hash) .
license: string @index(term, trigram) .
open_source: string @index(hash) .
pypi: string @index(term, trigram) .
cran: string @index(term, trigram) .
github: string @index(term, trigram) .

# ResearchPaper Predicates
isbn: string @index(exact).
title: string @index(term) .
paper_kind: string .
journal: string .
tools_used: [uid] @reverse . 
datasets_used: [uid] @reverse . 
corpus_used: [uid] @reverse . 

